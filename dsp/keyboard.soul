// vim: set ft=cpp:

namespace keyboard {
    const int unused = 60;

    struct Key {
        bool right;
        int index;
        int modifier;
    }

    int inLayout(Key k, int[30] l) {
        return k.right ? l.at(k.index + 15) : l.at(k.index);
    }

    bool usedIn(Key k, int[30] l) {
        return k.inLayout(l) != unused;
    }

    namespace sequence {
        const int[30] steps = int[30](
            unused, unused, unused, unused, unused, unused, 8, 9, 10, 11, unused, 0, 1, 2, 3,
            unused, unused, unused, unused, unused, 12, 13, 14, 15, unused, 4, 5, 6, 7, unused
        );
    }

    namespace scale {
        const int[12 * 15] offsets = int[12 * 15](
            -12, -10, -8, -7, -5, -3, -1, 0, 2, 4, 5, 7, 9, 11, 12,
            -12, -10, -9, -7, -5, -4, -2, 0, 2, 3, 5, 7, 8, 10, 12,
            -12, -10, -9, -7, -5, -3, -2, 0, 2, 3, 5, 7, 9, 10, 12,
            -12, -11, -9, -7, -5, -4, -2, 0, 1, 3, 5, 7, 8, 10, 12,
            -12, -10, -8, -6, -5, -3, -1, 0, 2, 4, 6, 7, 9, 11, 12,
            -12, -10, -8, -7, -5, -3, -2, 0, 2, 4, 5, 7, 9, 10, 12,
            -12, -11, -9, -7, -6, -4, -2, 0, 1, 3, 5, 6, 8, 10, 12,
            -12, -10, -9, -7, -5, -4, -1, 0, 2, 3, 5, 7, 8, 11, 12,
            -12, -10, -8, -7, -5, -4, -1, 0, 2, 4, 5, 7, 8, 11, 12,
            -12, -10, -9, -7, -5, -3, -1, 0, 2, 3, 5, 7, 9, 11, 12,
            -12, -10, -9, -7, -5, -4, -2, 0, 2, 3, 5, 7, 8, 10, 12,
            -12, -10, -8, -7, -5, -4, -2, 0, 2, 4, 5, 7, 8, 10, 12
        );

        int getOffset(int scale, int key) {
            return keyboard::scale::offsets.at(15 * (scale % 12) + (key % 15));
        }
    }
}
