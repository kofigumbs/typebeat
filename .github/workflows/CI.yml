on:
  workflow_dispatch: {}
  schedule:
    - cron: "0 14 * * *"

env:
  NODE_VERSION: 16
  NPM_VERSION: 7
  FAUST_VERSION: 2.33.1
  EMSCRIPTEN_VERSION: 2.0.29
  TAURI_CLI_VERSION: 1.0.0-beta.7
  NETLIFY_CLI_VERSION: 6

jobs:
  build-faust:
    strategy:
      matrix:
        include:
          - { os: macos-11, shell: 'bash' }
          - { os: windows-2019, shell: 'msys2 {0}' }
          - { os: 'ubuntu-20.04', shell: 'bash' }
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: ${{ matrix.shell }}
    steps:
      - if: runner.os == 'Windows'
        uses: msys2/setup-msys2@v2
        with:
          install: >-
            git
            base-devel
            mingw-w64-x86_64-toolchain
            mingw-w64-x86_64-cmake
      - id: cache-faust
        uses: actions/cache@v2
        with:
          path: ${{ runner.temp }}/artifacts
          key: faust-${{ env.FAUST_VERSION }}-${{ runner.os }}
      - if: steps.cache-faust.outputs.cache-hit != 'true'
        run: |-
          git clone --depth 1 https://github.com/grame-cncm/faust --branch $FAUST_VERSION $RUNNER_TEMP/repo
          echo 'set (RUST_BACKEND COMPILER STATIC DYNAMIC CACHE STRING "Include Rust backend" FORCE)' > $RUNNER_TEMP/repo/build/backends/rust.cmake
          make -C $RUNNER_TEMP/repo BACKENDS=rust.cmake compiler
          mkdir $RUNNER_TEMP/artifacts
          cp -r $RUNNER_TEMP/repo/{build/bin/faust,libraries} $RUNNER_TEMP/artifacts
      - uses: actions/upload-artifact@v2
        with:
          name: faust-${{ runner.os }}
          path: ${{ runner.temp }}/artifacts
          if-no-files-found: error

  build-tauri-apps:
    needs: build-faust
    strategy:
      matrix:
        include:
          - { os: macos-11, shell: 'bash', bundle: dmg }
          - { os: windows-2019, shell: 'msys2 {0}', bundle: msi }
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: ${{ matrix.shell }}
    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
        with:
          name: faust-${{ runner.os }}
          path: ${{ runner.temp }}/faust
      - uses: actions/setup-node@v2
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: npm
      - uses: actions-rs/toolchain@v1
        with: { profile: minimal, toolchain: nightly, override: true }
      - uses: Swatinem/rust-cache@v1
        with: { cache-on-failure: true }
      - run: |-
          npm install --global "npm@$NPM_VERSION" "netlify-cli@$NETLIFY_CLI_VERSION"
          npm install
          cargo install tauri-cli --version $TAURI_CLI_VERSION
          ls -la $RUNNER_TEMP/faust
          chmod +x $RUNNER_TEMP/faust/faust
          PATH="$RUNNER_TEMP/faust:$PATH" cargo tauri build
        env:
          NODE_OPTIONS: '--max_old_space_size=6000' # FIXME(https://github.com/vitejs/vite/issues/4162)
        shell: bash
      - uses: actions/upload-artifact@v2
        with:
          name: Typebeat.${{ matrix.bundle }}
          path: target/release/bundle/${{ matrix.bundle }}/Typebeat*.${{ matrix.bundle }}

  build-web:
    needs: build-faust
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
        with:
          name: faust-${{ runner.os }}
          path: ${{ runner.temp }}/faust
      - uses: actions/setup-node@v2
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: npm
      - uses: actions-rs/toolchain@v1
        with: { profile: minimal, toolchain: nightly, override: true, target: wasm32-unknown-emscripten }
      - uses: Swatinem/rust-cache@v1
        with: { cache-on-failure: true }
      - uses: kofigumbs/setup-emsdk@master # FIXME(https://github.com/mymindstorm/setup-emsdk/pull/22)
        with:
          version: ${{ env.EMSCRIPTEN_VERSION }}
          update-tags: true,
          actions-cache-folder: emsdk-cache
      - run: |-
          npm install --global npm@7 netlify-cli@6
          npm install
          chmod +x $RUNNER_TEMP/faust/faust
          PATH="$RUNNER_TEMP/faust:$PATH" netlify build --offline
        env:
          FAUST_LIB_PATH: ${{ runner.temp }}/faust/libraries
          NODE_OPTIONS: '--max_old_space_size=6000' # FIXME(https://github.com/vitejs/vite/issues/4162)
      - uses: actions/upload-artifact@v2
        with:
          name: site
          path: src-web/client/dist
          if-no-files-found: error

  deploy-web:
    needs: [ build-web, build-tauri-apps ]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: npm
      - uses: actions/download-artifact@v2
        with: { name: site, path: src-web/client/dist }
      - uses: actions/download-artifact@v2
        with: { name: Typebeat.dmg, path: src-web/client/dist/Typebeat.dmg }
      - uses: actions/download-artifact@v2
        with: { name: Typebeat.msi, path: src-web/client/dist/Typebeat.msi }
      - run: netlify deploy --prod
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
